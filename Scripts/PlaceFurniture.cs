using System.Collections;using System.Collections.Generic;using UnityEngine;using UnityEngine.XR.iOS;using UnityEngine.UI;enum FurnitureFlag { BED, SINK, DESK, TOILET, DESELECT, ERASER };public class PlaceFurniture : MonoBehaviour{    //public GameObject Sink;    //public GameObject Desk;    //public GameObject Toilet;    public GameObject Bed;    private FurnitureFlag buttonFlag;    GameObject bed;    public void clickPlaceBedButton()    {        foreach (Transform iter in transform)        {            iter.GetComponent<GameObject>().SetActive(true);        }        Debug.Log("clickPlaceBedButton", gameObject);        buttonFlag = FurnitureFlag.BED;        //InvokeRepeating("PlaceBed", 0f, 0.01f);    }    private void Update()    {        if (buttonFlag == FurnitureFlag.BED) PlaceBed();        if (buttonFlag == FurnitureFlag.ERASER) EraseBed();    }    public void clickEraseBedButton()    {        foreach (Transform iter in transform)        {            iter.GetComponent<GameObject>().SetActive(true);        }        Debug.Log("clickEraseBedButton", gameObject);        buttonFlag = FurnitureFlag.ERASER;        //InvokeRepeating("EraseBed", 0f, 0.01f);    }    public void clickDoneButton()    {        Debug.Log("clickDoneButton", gameObject);        buttonFlag = FurnitureFlag.DESELECT;        foreach (Transform iter in transform)        {            iter.GetComponent<GameObject>().SetActive(false);        }        //CancelInvoke("PlaceBed");    }    void PlaceBed(){        Debug.Log("PlaceBed", gameObject);        if (Input.touchCount > 0 && Input.GetTouch(0).phase == TouchPhase.Moved)        {            Debug.Log("PlaceRay", gameObject);            var Ray = Camera.main.ScreenPointToRay(Input.GetTouch(0).position);            RaycastHit hit;            if (Physics.Raycast(Ray, out hit))            {                Debug.Log("PlaceInstatiate", gameObject);                bed = Instantiate(Bed, hit.collider.transform.position, Quaternion.identity);            }        }    }    void EraseBed(){        if (Input.touchCount > 0 && Input.GetTouch(0).phase == TouchPhase.Moved)        {            Debug.Log("EraseRay", gameObject);            var Ray = Camera.main.ScreenPointToRay(Input.GetTouch(0).position);            RaycastHit hit;            if (Physics.Raycast(Ray, out hit))            {                Debug.Log("EraseDestroy", gameObject);                hit.collider.GetComponentInChildren<GameObject>();            }        }    }}